{
  "name": "passport-aol",
  "version": "0.2.0",
  "description": "AOL authentication strategy for Passport.",
  "keywords": [
    "passport",
    "aol",
    "auth",
    "authn",
    "authentication",
    "identity"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/jaredhanson/passport-aol.git"
  },
  "bugs": {
    "url": "http://github.com/jaredhanson/passport-aol/issues"
  },
  "author": {
    "name": "Jared Hanson",
    "email": "jaredhanson@gmail.com",
    "url": "http://www.jaredhanson.net/"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib/passport-aol",
  "dependencies": {
    "pkginfo": "0.2.x",
    "passport-openid": "0.3.x"
  },
  "devDependencies": {
    "vows": "0.6.x"
  },
  "scripts": {
    "test": "NODE_PATH=lib node_modules/.bin/vows test/*-test.js"
  },
  "engines": {
    "node": ">= 0.6.0"
  },
  "readme": "# Passport-AOL\n\n[Passport](http://passportjs.org/) strategy for authenticating with [AOL](http://www.aol.com/)\nusing OpenID 2.0.\n\nThis module lets you authenticate using AOL in your Node.js applications.\nBy plugging into Passport, AOL authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Install\n\n    $ npm install passport-aol\n\n## Usage\n\n#### Configure Strategy\n\nThe AOL authentication strategy authenticates users using a AOL account,\nwhich is also an OpenID 2.0 identifier.  The strategy requires a `verify`\ncallback, which accepts this identifier and calls `done` providing a user.\nAdditionally, options can be supplied to specify a return URL and realm.\n\n    passport.use(new AOLStrategy({\n        returnURL: 'http://localhost:3000/auth/aol/return',\n        realm: 'http://localhost:3000/'\n      },\n      function(identifier, done) {\n        User.findByOpenID({ openId: identifier }, function (err, user) {\n          return done(err, user);\n        });\n      }\n    ));\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'aol'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n    app.get('/auth/aol',\n      passport.authenticate('aol'));\n\n    app.get('/auth/aol/return', \n      passport.authenticate('aol', { failureRedirect: '/login' }),\n      function(req, res) {\n        // Successful authentication, redirect home.\n        res.redirect('/');\n      });\n\n## Examples\n\nFor a complete, working example, refer to the [signon example](https://github.com/jaredhanson/passport-aol/tree/master/examples/signon).\n\n## Tests\n\n    $ npm install --dev\n    $ make test\n\n[![Build Status](https://secure.travis-ci.org/jaredhanson/passport-aol.png)](http://travis-ci.org/jaredhanson/passport-aol)\n\n## Credits\n\n  - [Jared Hanson](http://github.com/jaredhanson)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2012-2013 Jared Hanson <[http://jaredhanson.net/](http://jaredhanson.net/)>\n",
  "readmeFilename": "README.md",
  "_id": "passport-aol@0.2.0",
  "dist": {
    "shasum": "d8b8687bc0ea82ade78a79df55df960993813855"
  },
  "_from": "passport-aol@*",
  "_resolved": "https://registry.npmjs.org/passport-aol/-/passport-aol-0.2.0.tgz"
}
